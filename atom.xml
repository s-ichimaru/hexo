<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech-Tutorial</title>
  
  
  <link href="/hexo-site/atom.xml" rel="self"/>
  
  <link href="https://s-ichimaru.github.io/hexo-site/"/>
  <updated>2018-10-02T13:03:25.656Z</updated>
  <id>https://s-ichimaru.github.io/hexo-site/</id>
  
  <author>
    <name>Satoshi Ichimaru</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker入門：③ボリュームとバインドマウント</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/30/docker-20180930-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/30/docker-20180930-1/</id>
    <published>2018-09-29T22:03:54.000Z</published>
    <updated>2018-10-02T13:03:25.656Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="ボリュームについて"><a href="#ボリュームについて" class="headerlink" title="ボリュームについて"></a>ボリュームについて</h2><p>ボリュームとは、コンテナ内のデータを永続化する仕組み。<br>コンテナ内にデータを作成すると、コンテナ削除でデータも初期化されるが、<br>ボリュームを用いるとDockerホストにデータを保持するため初期化されない。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1Gqhofmg3k54tm_ErI8bfr4YgGm4LX8IC" alt=""></p><p><img src="http://drive.google.com/uc?export=view&amp;id=1DugNYxdMXIVf_Hgk16YH__WD4hGdiCMq" alt=""></p><p>ボリュームはDockerで管理されているデータ群であり、エディタ等で直接内容を変更することは推奨されていない。</p><p><br></p><h2 id="バインドマウントについて"><a href="#バインドマウントについて" class="headerlink" title="バインドマウントについて"></a>バインドマウントについて</h2><p>バインドマウントとは、ホスト側のディレクトリとコンテナをマウントする仕組み。<br>ソースコードなど内容を変更したいものはこちらを用いる。<br>なお、バインドマウントでは、Windowsホストのディレクトリにもマウントすることが可能。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=19K-H9f7TFrZdbbHBc8YlRDGpeBMMPu37" alt=""></p><p>ボリュームはDockerコマンド（docker volume ls等）で操作できるため管理が容易だが、バインドマウントでは使えない。そのため、極力ボリュームを利用したほうが望ましい。<br>注意）Docker Toolbox(VirutalBox)では、C:\Users\（ユーザ名）配下のディレクトリのみバインド可能。</p><p><br></p><h2 id="PostgreSQLでボリューム作成"><a href="#PostgreSQLでボリューム作成" class="headerlink" title="PostgreSQLでボリューム作成"></a>PostgreSQLでボリューム作成</h2><p>PostgreSQLでのボリュームの利用例を示す。</p><p>ボリュームを使うには-vオプションを使用する。<br>「-v (ボリュームラベル名):（コンテナのフルパス）」<br>ここでは、PostgreSQLコンテナの「/var/lib/postgresql/data」をボリューム名「pgdata」で作成する。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name some-postgres -v pgdata:/var/lib/postgresql/data -p 5432:5432 -d postgres:9.6</span><br></pre></td></tr></table></figure><p>docker volume ls でボリュームが作成されていることを確認する。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               pgdata</span><br></pre></td></tr></table></figure><p>適当にデータを作成する。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># psql実行</span></span><br><span class="line">PS D:\dev\docker&gt; docker run -it --rm --link some-postgres:postgres postgres:9.6 psql -h postgres -U postgres</span><br><span class="line"></span><br><span class="line">psql (9.6.10)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">postgres=<span class="comment"># create user testuser with password 'testuser';</span></span><br><span class="line">CREATE ROLE</span><br><span class="line">postgres=<span class="comment"># create database test_db owner=testuser;</span></span><br><span class="line">CREATE DATABASE</span><br><span class="line">postgres=<span class="comment"># \c test_db</span></span><br><span class="line">You are now connected to database <span class="string">"test_db"</span> as user <span class="string">"postgres"</span>.</span><br><span class="line">test_db=<span class="comment"># \c - testuser</span></span><br><span class="line">You are now connected to database <span class="string">"test_db"</span> as user <span class="string">"testuser"</span>.</span><br><span class="line">test_db=&gt; create table t_user(</span><br><span class="line">test_db(&gt; id <span class="built_in">integer</span> primary key,</span><br><span class="line">test_db(&gt; name varchar(30));</span><br><span class="line">CREATE TABLE</span><br><span class="line">test_db=&gt; insert into t_user values(1,<span class="string">'test'</span>);</span><br><span class="line">INSERT 0 1</span><br></pre></td></tr></table></figure><p>コンテナを削除⇒起動してデータが消えてないことを確認する。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker stop some-postgres</span><br><span class="line">some-postgres</span><br><span class="line">PS D:\dev\docker&gt; docker rm some-postgres</span><br><span class="line">some-postgres</span><br><span class="line">PS D:\dev\docker&gt; docker run --name some-postgres -v pgdata:/var/lib/postgresql/data -p 5432:5432 -d postgres:9.6</span><br><span class="line">45d3e94c977f421233bc734f2dc301c7f327ece1ade4853deed57b686d0f1f70</span><br><span class="line">PS D:\dev\docker&gt; docker run -it --rm --link some-postgres:postgres postgres:9.6 psql -h postgres -U postgres</span><br><span class="line">psql (9.6.10)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">postgres=<span class="comment"># \l</span></span><br><span class="line">                                 List of databases</span><br><span class="line">   Name    |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges</span><br><span class="line">-----------+----------+----------+------------+------------+-----------------------</span><br><span class="line"> postgres  | postgres | UTF8     | en_US.utf8 | en_US.utf8 |</span><br><span class="line"> template0 | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +</span><br><span class="line">           |          |          |            |            | postgres=CTc/postgres</span><br><span class="line"> template1 | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +</span><br><span class="line">           |          |          |            |            | postgres=CTc/postgres</span><br><span class="line"> test_db   | testuser | UTF8     | en_US.utf8 | en_US.utf8 |</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">postgres=<span class="comment"># \c test_db</span></span><br><span class="line">You are now connected to database <span class="string">"test_db"</span> as user <span class="string">"postgres"</span>.</span><br><span class="line">test_db=<span class="comment"># \c - testuser</span></span><br><span class="line">You are now connected to database <span class="string">"test_db"</span> as user <span class="string">"testuser"</span>.</span><br><span class="line">test_db=&gt; select * from t_user;</span><br><span class="line"> id | name</span><br><span class="line">----+------</span><br><span class="line">  1 | <span class="built_in">test</span></span><br><span class="line">(1 row)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br></p><h2 id="Apacheでバインドマウント"><a href="#Apacheでバインドマウント" class="headerlink" title="Apacheでバインドマウント"></a>Apacheでバインドマウント</h2><p>「/usr/local/apache2/htdocs」をバインドマウントして、<br>HTMLをWindowsホストから編集できるようにする。</p><p>バインドマウントはボリュームと同じ-vオプションを使用するが、<br>ボリューム名ではなくホスト側のフルパスとなる。<br>「-v (ホストのフルパス):（コンテナのフルパス）」</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name apache -d -p 80:80 -v /c/Users/（ユーザ名）/docker_volumes/apache/htdocs:/usr/<span class="built_in">local</span>/apache2/htdocs httpd</span><br></pre></td></tr></table></figure><p>※バインド先「C:\Users\（ユーザ名）\docker_volumes\apache\htdocs」</p><p>index.htmlを作成してローカルに配置する。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    TEST!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ブラウザで確認する。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1kVuAvXr8cLqhrzyuusW53zNbCUkRICdF" alt=""></p><p><br></p><h2 id="ボリュームの削除"><a href="#ボリュームの削除" class="headerlink" title="ボリュームの削除"></a>ボリュームの削除</h2><p>docker volume rm (ボリュームラベル名)<br>を用いる。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line">local               pgdata</span><br><span class="line">PS D:\dev\docker&gt; docker volume rm pgdata</span><br><span class="line">pgdata</span><br><span class="line">PS D:\dev\docker&gt; docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/Docker/"/>
    
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker入門：②インストールと基本操作</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/29/docker-20180929-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/29/docker-20180929-1/</id>
    <published>2018-09-28T15:54:53.000Z</published>
    <updated>2018-10-02T13:03:05.849Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="Dockerインストール（Windows）"><a href="#Dockerインストール（Windows）" class="headerlink" title="Dockerインストール（Windows）"></a>Dockerインストール（Windows）</h2><p>Windows版のDockerは、２つのバージョンがある。</p><p>・Docker for Windows<br>　Window 10 Professionalで導入する。<br>　DockerマシンはHyper-Vで作成する。<br>　公式はこちらを推奨している。</p><p>　下記のサイトからインストーラをダウンロードしてインストールする。<br>　<a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">https://www.docker.com/products/docker-desktop</a><br>　<br>・Docker Toolbox<br>　Windows 10 Home以下のOSで導入する。<br>　DockerマシンはVirtualBoxで作成する（HomeではHyper-Vが利用できない）</p><p>　下記のサイトからインストーラをダウンロードしてインストールする。<br>　<a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="noopener">https://docs.docker.com/toolbox/toolbox_install_windows/</a></p><p>こちらの環境はWindows 10 Homeのため、Docker Toolboxを用いて説明を行う。</p><h2 id="Docker構成"><a href="#Docker構成" class="headerlink" title="Docker構成"></a>Docker構成</h2><p><img src="http://drive.google.com/uc?export=view&amp;id=1YAUNa4AS07vHKIdqy2TwWTh40-RgKwHh" alt=""></p><p>・Windowsマシン（Windowsホスト）<br>　Dockerをインストールしたマシン。<br>　VirtualBox（Proの場合はHyper-V）をDockerマシンを作成する。<br>　Dockerクライアントを用いてDockerマシンを操作する。</p><p>・Dockerマシン（Dockerホスト）<br>　Dockerコンテナを管理する仮想マシン。</p><p>・Dockerイメージ<br>　コンテナを構成するイメージファイル。<br>　イメージはDockerリポジトリからダウンロードする。<br>　<br>・Dockerコンテナ<br>　Dockerイメージから作成される仮想コンテナ。</p><p>・Docker Hub<br>　Dockerイメージを管理するクラウドリポジトリ。<br>　<a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p><p><br></p><h2 id="Dockerマシン作成"><a href="#Dockerマシン作成" class="headerlink" title="Dockerマシン作成"></a>Dockerマシン作成</h2><p>まずはDockerマシンを作成する。<br>PowerShellで操作を行う。マシン名はtest-machineとする。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker Mahcine　一覧コマンド</span></span><br><span class="line">PS D:\dev\docker&gt; docker-machine ls</span><br><span class="line">NAME   ACTIVE   DRIVER   STATE   URL   SWARM   DOCKER   ERRORS</span><br><span class="line"><span class="comment"># Docker Mahcine　作成</span></span><br><span class="line">PS D:\dev\docker&gt; docker-machine create <span class="built_in">test</span>-machine</span><br><span class="line">Running pre-create checks...</span><br><span class="line">Creating machine...</span><br><span class="line">（省略）</span><br><span class="line">PS D:\dev\docker&gt; docker-machine ls</span><br><span class="line">NAME           ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</span><br><span class="line"><span class="built_in">test</span>-machine   -        virtualbox   Running   tcp://192.168.99.100:2376           v18.06.1-ce</span><br></pre></td></tr></table></figure><p>アクティブ化してDockerクライアントで操作できるようにする。<br>docker-machine env～で環境変数を取得して、一番最後に出力される「&amp;～|Invoke-Expression」を実行する。docker-machine ls でActiveに*がついていれば完了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker-machine env <span class="built_in">test</span>-machine --shell powershell</span><br><span class="line">（省略）</span><br><span class="line"><span class="comment"># Run this command to configure your shell:</span></span><br><span class="line"><span class="comment"># &amp; "D:\Installs\Docker Toolbox\docker-machine.exe" env test-machine --shell powershell | Invoke-Expression</span></span><br><span class="line">PS D:\dev\docker&gt; &amp; <span class="string">"D:\Installs\Docker Toolbox\docker-machine.exe"</span> env <span class="built_in">test</span>-machine --shell powershell | Invoke-Expression</span><br><span class="line">PS D:\dev\docker&gt; docker-machine ls</span><br><span class="line">NAME           ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</span><br><span class="line"><span class="built_in">test</span>-machine   *        virtualbox   Running   tcp://192.168.99.100:2376           v18.06.1-ce</span><br></pre></td></tr></table></figure><p><br></p><h2 id="Dockerコンテナの作成"><a href="#Dockerコンテナの作成" class="headerlink" title="Dockerコンテナの作成"></a>Dockerコンテナの作成</h2><p>次にDockerコンテナを作成する。<br>ここではApacheをインストールして動作確認を行う。</p><p>手順）<br>　・Docker Hubでイメージを確認<br>　・イメージの取得（docker pull）<br>　・コンテナの作成（docker create）<br>　・コンテナの起動（docker start）<br>　・コンテナの起動２（docker run）</p><p><br></p><h3 id="Docker-Hubでイメージを確認"><a href="#Docker-Hubでイメージを確認" class="headerlink" title="Docker Hubでイメージを確認"></a>Docker Hubでイメージを確認</h3><p>　コンテナを作成するにはイメージが必要なので、<br>　Docker Hub( <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a> )からhttpdを検索してイメージの情報を確認する。<br><img src="http://drive.google.com/uc?export=view&amp;id=1xPYkO8UZ81ugERks7GGP114W5j4ttJLy" alt=""><br><img src="http://drive.google.com/uc?export=view&amp;id=1lkVMK_13WDnHpiakl90VkdW-d865J-95" alt=""></p><p><br></p><h3 id="イメージの取得（docker-pull）"><a href="#イメージの取得（docker-pull）" class="headerlink" title="イメージの取得（docker pull）"></a>イメージの取得（docker pull）</h3><p>　docker pullでイメージのダウンロードを行う。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Apache Imageの取得</span></span><br><span class="line">PS D:\dev\docker&gt; docker pull httpd</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/httpd</span><br><span class="line">f189db1b88b3: Pull complete</span><br><span class="line">ba2d31d4e2e7: Pull complete</span><br><span class="line">23a65f5e3746: Pull complete</span><br><span class="line">5e8eccbd4bc6: Pull complete</span><br><span class="line">4c145eec18d8: Pull complete</span><br><span class="line">c64fd93430a0: Pull complete</span><br><span class="line">c9efc31823a2: Pull complete</span><br><span class="line">Digest: sha256:81bc5f68f994a3c7bffc5d6ecba9e4fde70488c43ee8d57846a45c4995c67a23</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> httpd:latest</span><br><span class="line">PS D:\dev\docker&gt;</span><br><span class="line"><span class="comment"># Imageの一覧</span></span><br><span class="line">PS D:\dev\docker&gt; docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">httpd               latest              dabb52744997        2 days ago          178MB</span><br><span class="line">PS D:\dev\docker&gt;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="コンテナの作成（docker-create）"><a href="#コンテナの作成（docker-create）" class="headerlink" title="コンテナの作成（docker create）"></a>コンテナの作成（docker create）</h3><p>docker createでコンテナを作成する。<br>「–name apache」でコンテナに名前を付ける。<br>「-p 8081:80」でポートフォワードを行う。（DockerホストIP）:8081⇒（コンテナIP）:80でフォワードする。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Apacheコンテナを作成</span></span><br><span class="line">PS D:\dev\docker&gt; docker create --name apache -p 8081:80 httpd</span><br><span class="line">7c725ff3a73331f2dafad9da4b11748a6ee86b965c7c24a696ae6e53a018325c</span><br><span class="line"><span class="comment"># コンテナ一覧（停止中も含める）</span></span><br><span class="line">PS D:\dev\docker&gt; docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS               NAMES</span><br><span class="line">7c725ff3a733        httpd               <span class="string">"httpd-foreground"</span>   6 seconds ago       Created                                 apache</span><br><span class="line">PS D:\dev\docker&gt;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="コンテナの起動（docker-start）"><a href="#コンテナの起動（docker-start）" class="headerlink" title="コンテナの起動（docker start）"></a>コンテナの起動（docker start）</h3><p>docker startでコンテナ名を指定して起動する。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Apacheコンテナを起動</span></span><br><span class="line">PS D:\dev\docker&gt; docker start apache</span><br><span class="line">apache</span><br><span class="line"><span class="comment"># コンテナ一覧（起動中のみ）</span></span><br><span class="line">PS D:\dev\docker&gt; docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS                  NAMES</span><br><span class="line">7c725ff3a733        httpd               <span class="string">"httpd-foreground"</span>   7 minutes ago       Up 3 seconds        0.0.0.0:8081-&gt;80/tcp   apache</span><br><span class="line">PS D:\dev\docker&gt;</span><br></pre></td></tr></table></figure><p>ブラウザで「（DockerホストIP）:8081」で画面が表示されるか確認する。<br>なお、DockerホストのIPは「docker-machine ls」か「docker-machine ip test-machine」で確認できる。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1I4R1lOOnRngw49ssRWHjzYrLJHsFGCcx" alt=""></p><p><br></p><h3 id="コンテナの起動２（docker-run）"><a href="#コンテナの起動２（docker-run）" class="headerlink" title="コンテナの起動２（docker run）"></a>コンテナの起動２（docker run）</h3><p>docker runは、docker pull ⇒ docker create ⇒ docker startを一括で行ってくれるコマンド。<br>特に理由がないなら、こちらを利用したほうが効率が良い。<br>なお、上記のapacheをdocker runで起動する場合は</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name apache -d -p 8081:80 httpd</span><br></pre></td></tr></table></figure><p>となる。<br>注意するのは、docker createはデタッチモードで作成されるが、<br>docker runはアタッチモードで作成される。<br>そのため、デーモン実行する場合は「-d」を付与する。</p><p><br></p><h2 id="起動中のDockerコンテナにアタッチ"><a href="#起動中のDockerコンテナにアタッチ" class="headerlink" title="起動中のDockerコンテナにアタッチ"></a>起動中のDockerコンテナにアタッチ</h2><p>起動中のDockerコンテナを操作する場合、docker execでシェルを実行すれば侵入できる。<br>その際、STDINを開き、疑似ターミナル (pseudo-TTY) を割り当てる必要がある。<br>そのオプションが「-i」と「-t」となる。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker <span class="built_in">exec</span> -it apache /bin/bash</span><br><span class="line">root@7c725ff3a733:/usr/<span class="built_in">local</span>/apache2<span class="comment"># ls</span></span><br><span class="line">bin  build  cgi-bin  conf  error  htdocs  icons  include  logs  modules</span><br><span class="line">root@7c725ff3a733:/usr/<span class="built_in">local</span>/apache2<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="コンテナ停止、削除"><a href="#コンテナ停止、削除" class="headerlink" title="コンテナ停止、削除"></a>コンテナ停止、削除</h2><p>docker stopとdocker rmを用いる。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker stop apache</span><br><span class="line">apache</span><br><span class="line">PS D:\dev\docker&gt; docker rm apache</span><br><span class="line">apache</span><br></pre></td></tr></table></figure><p>注意）コンテナの削除を行うとコンテナ内のデータは削除される。<br>例えば、データベースコンテナを削除するとテーブルやデータは全て初期化される。<br>これはDocker Volume機能を用いて、ホスト側でデータを作成すれば解決する。</p><p><br></p><h2 id="イメージの削除"><a href="#イメージの削除" class="headerlink" title="イメージの削除"></a>イメージの削除</h2><p>docker rmiでイメージを削除する。<br>パラメータにはIMAGE IDを指定する。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">PS D:\dev\docker&gt; docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">httpd               latest              dabb52744997        2 days ago          178MB</span><br><span class="line">PS D:\dev\docker&gt; docker rmi dabb52744997</span><br><span class="line">Untagged: httpd:latest</span><br><span class="line">Untagged: httpd@sha256:81bc5f68f994a3c7bffc5d6ecba9e4fde70488c43ee8d57846a45c4995c67a23</span><br><span class="line">Deleted: sha256:dabb527449975533d6eea937e5a0123ed1b57b16d921b7b4346a3cf367751615</span><br><span class="line">Deleted: sha256:5d49a3f053113d87d691d2522f9c0277ffd18cabcce0d66c684099e1247afece</span><br><span class="line">Deleted: sha256:eaa99c16f7c88d1e682bcf28bddfe2fc2af60578976c649e7682f8285b61e3db</span><br><span class="line">Deleted: sha256:508679f3525982886ebd38e574f94503859b6dcecc16b4905e96162f9e3676c2</span><br><span class="line">Deleted: sha256:ea41f37c700199a74899df991c29276c58d47855b9366d0afaeec94f9b40b693</span><br><span class="line">Deleted: sha256:907e44cd08b8d5d3579acad7aafc3f9e7cbe4fef06e661fffd9d0bbfe0acfd9a</span><br><span class="line">Deleted: sha256:b5a1919e63f10b3e8057ca92fd414c7eb93bf06aa0a797701f5d598e35a811d5</span><br><span class="line">Deleted: sha256:8c466bf4ca6ffdda8b7717b1cd6fe31109529ee64e626a003a224fb8bd2bc469</span><br><span class="line">PS D:\dev\docker&gt;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="よく使うDockerコマンド一覧"><a href="#よく使うDockerコマンド一覧" class="headerlink" title="よく使うDockerコマンド一覧"></a>よく使うDockerコマンド一覧</h2><p><a href="http://docs.docker.jp/engine/reference/commandline/index.html#docker-management-commands" target="_blank" rel="noopener">http://docs.docker.jp/engine/reference/commandline/index.html#docker-management-commands</a></p><h3 id="Docker-Machine"><a href="#Docker-Machine" class="headerlink" title="Docker Machine"></a>Docker Machine</h3><table><thead><tr><th style="text-align:left">コマンド</th><th style="text-align:left">説明</th></tr></thead><tbody><tr><td style="text-align:left">docker-machine ls</td><td style="text-align:left">Dockerマシン一覧</td></tr><tr><td style="text-align:left">docker-machine create [name]</td><td style="text-align:left">Dockerマシンを作成する<br>Hyper-Vではオプションに–driver hypervが必要</td></tr><tr><td style="text-align:left">docker-machine rm [name]</td><td style="text-align:left">Dockerマシンを削除する</td></tr><tr><td style="text-align:left">docker-machine start [name]</td><td style="text-align:left">Dockerマシンを実行する</td></tr><tr><td style="text-align:left">docker-machine stop [name]</td><td style="text-align:left">Dockerマシンを停止する</td></tr><tr><td style="text-align:left">docker-machine env [name] —shell powershell</td><td style="text-align:left">Docker環境変数の取得を行う</td></tr><tr><td style="text-align:left">docker-machine ssh [name]</td><td style="text-align:left">Dockerマシンにssh接続を行う</td></tr></tbody></table><p><br></p><h3 id="Docker-イメージ"><a href="#Docker-イメージ" class="headerlink" title="Docker イメージ"></a>Docker イメージ</h3><table><thead><tr><th style="text-align:left">コマンド</th><th style="text-align:left">説明</th></tr></thead><tbody><tr><td style="text-align:left">docker images</td><td style="text-align:left">イメージの一覧　　　　　　　　</td></tr><tr><td style="text-align:left">docker pull [repositoryName:tag]</td><td style="text-align:left">イメージを取り込み</td></tr><tr><td style="text-align:left">docker rmi [image]</td><td style="text-align:left">イメージの削除</td></tr></tbody></table><p><br></p><h3 id="Docker-コンテナ"><a href="#Docker-コンテナ" class="headerlink" title="Docker コンテナ"></a>Docker コンテナ</h3><table><thead><tr><th style="text-align:left">コマンド</th><th style="text-align:left">説明</th></tr></thead><tbody><tr><td style="text-align:left">docker ps</td><td style="text-align:left">コンテナ一覧<br>-aで停止中も表示</td></tr><tr><td style="text-align:left">docker create [image]</td><td style="text-align:left">コンテナの作成<br>–name：コンテナ名<br>-p ポートフォワード</td></tr><tr><td style="text-align:left">docker start [container]</td><td style="text-align:left">コンテナの実行</td></tr><tr><td style="text-align:left">docker run [image]</td><td style="text-align:left">pull,create,startのセットコマンド</td></tr><tr><td style="text-align:left">docker stop [container]</td><td style="text-align:left">コンテナの停止</td></tr><tr><td style="text-align:left">docker rm [container]</td><td style="text-align:left">コンテナの削除</td></tr><tr><td style="text-align:left">docker exec [container][command]</td><td style="text-align:left">コンテナのコマンド実行<br>コンテナアタッチ：-it /bin/bash</td></tr><tr><td style="text-align:left">docker inspect [container]</td><td style="text-align:left">コンテナ情報の表示</td></tr><tr><td style="text-align:left">docker volume ls</td><td style="text-align:left">ボリューム一覧</td></tr><tr><td style="text-align:left">docker volume rm [volume]</td><td style="text-align:left">ボリューム削除</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/Docker/"/>
    
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker入門：①概要</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/27/docker-20180927-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/27/docker-20180927-1/</id>
    <published>2018-09-26T15:00:29.000Z</published>
    <updated>2018-10-02T13:06:51.185Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="Dockerとは"><a href="#Dockerとは" class="headerlink" title="Dockerとは"></a>Dockerとは</h2><p><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></p><blockquote><p>Docker（ドッカー[2]）はコンテナ型の仮想化環境を提供するオープンソースソフトウェアである[3]。VMware製品などの完全仮想化を行うハイパーバイザ型製品と比べて、ディスク使用量は少なく、仮想環境 (インスタンス) 作成や起動は速く、性能劣化がほとんどないという利点を持つ。</p><footer><strong>wikipedia,</strong><cite><a href="https://ja.wikipedia.org/wiki/Docker" target="_blank" rel="noopener">ja.wikipedia.org/wiki/Docker</a></cite></footer></blockquote><p>仮想化は古くからある技術であり、主にサーバのリソースを有効活用するために用いられる。<br>1台のマシンに複数のOSを立ち上げて、あたかも複数のマシンが動作しているように見せる仕組みだ。仮想化ソフトウェアを用いて、仮想的に立ち上げたマシンを仮想マシン（Virtual Machine：略してVM）と呼ぶ。</p><p>従来の仮想化では、OSが仮想マシンにそのまま乗るため、どうしてもリソースの冗長性が生じる。<br>DockerはLinuxのコンテナ技術を利用して、ホストとなるOSのリソース（カーネル）を使いまわす。つまり、一つのOSで複数のOSが実行しているように見えるわけだ。<br>これにより、非常に軽量な仮想化を実現できる。<br>なお、従来の仮想化をホスト型仮想化、Dockerをコンテナ型仮想化と呼ぶ。</p><p><img src="https://knowledge.sakura.ad.jp/images/2018/01/VM_Container-768x437.jpg" alt=""><br>参考）<a href="https://knowledge.sakura.ad.jp/13265/" target="_blank" rel="noopener">https://knowledge.sakura.ad.jp/13265/</a></p><p>コンテナ型仮想化は良いこと尽くしというわけではない。<br>ホスト型仮想化は仮想マシンが独立しており分離レベルが高い。<br>コンテナ型は分離レベルが低いため、セキュリティ等に問題があった場合は全てのマシンに影響する。さらにコンテナ型仮想化はカーネルに依存するため、LinuxのDockerにWindowsを入れることはできない。</p><p><br></p><h2 id="Dockerの用途"><a href="#Dockerの用途" class="headerlink" title="Dockerの用途"></a>Dockerの用途</h2><p>従来のサーバ仮想化はもちろんのこと、軽量化により開発マシンにも適用されることが多くなってきている。開発ではプロジェクトごとに異なるプログラム実行環境、データベースなどをインストールして作業を行うが、管理が煩雑になったり、異なるバージョンの共存が困難だったりと問題となることがある。そもそも環境構築の負担も高い。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1M8nM-qHnuPvpdlEerPUR4UHRrt2q7n6O" alt=""></p><p>Dockerを用いて、開発環境を仮想化することで管理が非常に楽になる。<br>仮想マシンの作成、削除ならびにコンテナの作成、削除が容易で高速なため、<br>不要となった環境を削除、必要になったら作成と手軽に行うとこが可能だ。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1y0CwK8EJ-AXWBk86CdljC92edHhEAfkb" alt=""></p><p>なお、Docker環境をパブリッククラウドにデプロイすることもできる。<br>これにより、開発環境は本番環境と同じ構成で作業を行える。<br>注意：下記の例ではRDBもDockerに含めているが、実際はAmazon RDSを用いたほうが良い。<br>DockerはDisk I/Oの多いRDBや、サーバ間の双方向のネットワーク通信が必要となる分散ストレージは不向きとされているらしい。Dockerの本番運用は十分な検討が必要。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1N0K_OWEVAcbnPWppwT8OWgIpMlryRhsW" alt=""></p><p><br></p><h2 id="DockerのEdition"><a href="#DockerのEdition" class="headerlink" title="DockerのEdition"></a>DockerのEdition</h2><p>・Docker Community Edition(Docke CE)<br>　無償版Docker<br>　基本的なDocker機能は利用できる。<br>　Stable版（四半期ごとのリリース）とEdge版（一か月ごとのリリース）に分かれる。　</p><p>・Docker Enterprise Edition(Docker EE)<br>　有償版Docker<br>　Docker社が認定したコンテナやプラグインが利用可能。<br>　プライベートリポジトリを利用できる。<br>　イメージのセキュリティスキャンが行われる。<br>　四半期ごとのリリース。<br>　など</p><p><br></p><h2 id="Dockerのバージョン表記"><a href="#Dockerのバージョン表記" class="headerlink" title="Dockerのバージョン表記"></a>Dockerのバージョン表記</h2><p>17.10.0-ce　⇒　2017/10にリリースされたDocker Community Edition<br>17.10.0-ee　⇒　2017/10にリリースされたDocker Enterprise Edition</p><p><br></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>・Docker ドキュメント日本語化プロジェクト<br>　<a href="http://docs.docker.jp/" target="_blank" rel="noopener">http://docs.docker.jp/</a></p><p>・Docker入門（第一回）～Dockerとは何か、何が良いのか～<br>　<a href="https://knowledge.sakura.ad.jp/13265/" target="_blank" rel="noopener">https://knowledge.sakura.ad.jp/13265/</a></p><p>・ゼロからはじめる Dockerによるアプリケーション実行環境構築<br>　<a href="https://www.udemy.com/docker-k/" target="_blank" rel="noopener">https://www.udemy.com/docker-k/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E4%BB%AE%E6%83%B3%E5%8C%96/Docker/"/>
    
    
      <category term="仮想化" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E4%BB%AE%E6%83%B3%E5%8C%96/"/>
    
      <category term="Docker" scheme="https://s-ichimaru.github.io/hexo-site/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>JHipsterプラットフォームで学ぶ最新Java開発</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/22/jhipster-20180922-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/22/jhipster-20180922-1/</id>
    <published>2018-09-21T15:02:29.000Z</published>
    <updated>2018-10-02T14:16:43.645Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="JHipsterとは"><a href="#JHipsterとは" class="headerlink" title="JHipsterとは"></a>JHipsterとは</h2><p><a href="https://www.jhipster.tech/" target="_blank" rel="noopener">https://www.jhipster.tech/</a></p><p>Spring Boot + Angular / React WebアプリケーションおよびSpringマイクロサービスを生成、開発、デプロイするための開発プラットフォームである。SPA（single-page application）＋マイクロサービスを構築するための土台を用意してくれるのだ。</p><p>そもそも、このプラットフォームを見つけた経緯としては、JavaでRuby on Railsのscaffold的なことが出来ないかを調査したところから始まる。<br>scaffoldとはCRUD画面とそれに紐づくドメインモデル（エンティティ）を自動生成してくれる仕組みだ。<br>シンプルな画面しか生成されないためコードをガリガリ修正する必要はあるが、ゼロから作成するよりも負担は低いし、生成されたコードは入門者の良いお手本になる。</p><p>「それならplay frameworkでしょ」となるかもしれないが、個人的にあれはJavaではない気がする。<br>確かにJavaVMで動作するし、Java言語（推奨はJVM言語のScalaだが）でコーディングするが、J2EEは用いない。<br>長いことJavaをやってると、WebアプリでJ2EE（Servlet）を用いないのはすごく違和感がある。<br>別に貶しているわけではない。play frameworkに組み込まれているノンブロッキングIOのNettyサーバーはB2Cでは必須級のサーバだと思うし、高速開発には良いフレームワークだと思う。<br>ただ、play frameworkで作るならRuby on Railsで良くない？となってしまう。</p><p>やはりJavaのWebといえばJ2EEコンテナでしょ！Springでしょ！となる。<br>そこで見つけたのがJHipsterになる。</p><p><br></p><h2 id="JHipsterの特徴"><a href="#JHipsterの特徴" class="headerlink" title="JHipsterの特徴"></a>JHipsterの特徴</h2><p>Spring Bootを軸として、それに付与するテクノロジーを選択して構築していく。<br>JHipsterはフレームワークではなく、コードジェネレータの役割を果たすために開発プラットフォームとなっている。<br>マイナーなプラットフォームだし、比較的新しい技術をガンガン取り入れている感じがするので、<br>実運用で使うのは懸念が生じるが、そもそも基盤はSpring BootやAngular（or React）なので<br>自動生成されるソースを熟知すれば問題ないとも思う。</p><p>・とりあえず実績。※実際に使用しているかは分からない<br><a href="https://www.jhipster.tech/companies-using-jhipster/" target="_blank" rel="noopener">https://www.jhipster.tech/companies-using-jhipster/</a></p><p>Adobeやgoogle、Pivotal、NTT DATAまでもある。<br>ダウンロード数は月に75,000。GitHubリポジトリ検索は2,723。<br>（ちなみにjava 881,294 spring 352,379）</p><p>・クライアントサイド　テクノロジー<br><img src="http://drive.google.com/uc?export=view&amp;id=1reb6J6OAKhglbUa_fTP2ref5IM4-aWIm" alt=""></p><p>・サーバーサイド　テクノロジー<br><img src="http://drive.google.com/uc?export=view&amp;id=1Er8xDMupdNeOlGrlM3Fku0JwxA14J9lI" alt=""></p><p>・デベロップメント　テクノロジー<br><img src="http://drive.google.com/uc?export=view&amp;id=1b1Mzh_Rw1alfg2eOoWaCwZzK5cyx5bQu" alt=""></p><p>・CD/CI　テクノロジー<br><img src="http://drive.google.com/uc?export=view&amp;id=1HhuVLp8Dq087eFdrjVwLj7cfSxgloOkJ" alt=""></p><p><br></p><h2 id="JHipsterインストール"><a href="#JHipsterインストール" class="headerlink" title="JHipsterインストール"></a>JHipsterインストール</h2><table><thead><tr><th style="text-align:left">環境</th><th style="text-align:left">バージョン</th></tr></thead><tbody><tr><td style="text-align:left">OS</td><td style="text-align:left">Windows10 Home</td></tr><tr><td style="text-align:left">node.js</td><td style="text-align:left">8.12.0 (LTS)</td></tr><tr><td style="text-align:left">java</td><td style="text-align:left">1.8.0_73</td></tr><tr><td style="text-align:left">jhipster</td><td style="text-align:left">5.2.1※最新より少しバージョンダウン</td></tr></tbody></table><p>JHipsterのインストールはnode.jsのnpmで行う。<br>よってnode.jsをインストールする。※安定版（LTS）を選択すること<br><a href="https://nodejs.org/ja/" target="_blank" rel="noopener">https://nodejs.org/ja/</a></p><p>Javaは1.8以上をインストール。<br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>PowerShellでnpm install -g <a href="mailto:generator-jhipster@5.2.1" target="_blank" rel="noopener">generator-jhipster@5.2.1</a>を実行する。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS C:\dev\JHipster&gt; node --version</span><br><span class="line">v8.<span class="number">12</span>.<span class="number">0</span></span><br><span class="line">PS C:\dev\JHipster&gt; java -version</span><br><span class="line">java version "<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_73"</span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_73-b02)</span><br><span class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">25</span>.<span class="number">73</span>-b02, mixed <span class="built_in">mode</span>)</span><br><span class="line">PS C:\dev\JHipster&gt; npm install -g generator-jhipster@<span class="number">5</span>.<span class="number">2</span>.<span class="number">1</span></span><br><span class="line">・・・</span><br><span class="line">PS C:\dev\JHipster\myApp&gt; jhipster --version</span><br><span class="line">Using JHipster version installed globally</span><br><span class="line"><span class="number">5</span>.<span class="number">2</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="アプリの構築"><a href="#アプリの構築" class="headerlink" title="アプリの構築"></a>アプリの構築</h2><p>myAppとしてサンプルアプリを構築する<br>myAppフォルダを作り、カレントにしてjhipsterを実行する。<br>その後、どのような構築を行うか質問が来るので回答を入れていく。<br>質問の内容は、下記のシートを参照<br><a href="https://drive.google.com/open?id=1PNQogsa49eb5v_VB8zC684v3mNzthZd79YNWbW05qAI" target="_blank" rel="noopener">https://drive.google.com/open?id=1PNQogsa49eb5v_VB8zC684v3mNzthZd79YNWbW05qAI</a></p><p>シンプル構成で構築</p><table><thead><tr><th style="text-align:left">質問</th><th style="text-align:left">回答</th></tr></thead><tbody><tr><td style="text-align:left">アプリタイプ</td><td style="text-align:left">モノリシックアプリケーション</td></tr><tr><td style="text-align:left">アプリ名</td><td style="text-align:left">myApp</td></tr><tr><td style="text-align:left">パッケージ</td><td style="text-align:left">jp.co.myApp</td></tr><tr><td style="text-align:left">JHipsterレジストリを使用</td><td style="text-align:left">無し</td></tr><tr><td style="text-align:left">認証</td><td style="text-align:left">JWT認証</td></tr><tr><td style="text-align:left">データベースタイプ</td><td style="text-align:left">SQLデータベース</td></tr><tr><td style="text-align:left">データベース（本番）</td><td style="text-align:left">PostgreSQL</td></tr><tr><td style="text-align:left">データベース（開発）</td><td style="text-align:left">H2インメモリ</td></tr><tr><td style="text-align:left">Springキャッシュ</td><td style="text-align:left">有り</td></tr><tr><td style="text-align:left">Hibenate2次キャッシュ</td><td style="text-align:left">有り</td></tr><tr><td style="text-align:left">Maven or Gradle</td><td style="text-align:left">Maven</td></tr><tr><td style="text-align:left">その他テクノロジー</td><td style="text-align:left">無し</td></tr><tr><td style="text-align:left">クライアントフレームワーク</td><td style="text-align:left">Angular</td></tr><tr><td style="text-align:left">LibSassの使用</td><td style="text-align:left">無し</td></tr><tr><td style="text-align:left">国際化のサポート</td><td style="text-align:left">有り（ベースはEnglish、言語選択で日本語を追加）</td></tr><tr><td style="text-align:left">テスティングフレームワーク</td><td style="text-align:left">Protractor</td></tr><tr><td style="text-align:left">JHipster Marketplaceの使用</td><td style="text-align:left">無し</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">PS C:\dev\JHipster&gt; <span class="built_in">mkdir</span> myApp</span><br><span class="line">PS C:\dev\JHipster&gt; <span class="built_in">cd</span> myApp</span><br><span class="line">PS C:\dev\JHipster\myApp&gt; jhipster</span><br><span class="line"></span><br><span class="line">・・・</span><br><span class="line"></span><br><span class="line">? Which *<span class="built_in">type</span>* of application would you like to create? Monolithic application (recommended <span class="keyword">for</span> simple projects)</span><br><span class="line">? What is the base name of your application? myApp</span><br><span class="line">? What is your default Java package name? jp.co.myapp</span><br><span class="line">? <span class="keyword">Do</span> you want to use the JHipster Registry to configure, monitor and scale your application? No</span><br><span class="line">? Which *<span class="built_in">type</span>* of authentication would you like to use? JWT authentication (stateless, with a token)</span><br><span class="line">? Which *<span class="built_in">type</span>* of database would you like to use? SQL (H2, MySQL, MariaDB, PostgreSQL, Oracle, MSSQL)</span><br><span class="line">? Which *production* database would you like to use? PostgreSQL</span><br><span class="line">? Which *development* database would you like to use? H2 with disk-based persistence</span><br><span class="line">? <span class="keyword">Do</span> you want to use the Spring cache abstraction? Yes, with the Ehcache implementation (local cache, <span class="keyword">for</span> a single node)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">? <span class="keyword">Do</span> you want to use Hibernate <span class="number">2</span>nd level cache? Yes</span><br><span class="line">? Would you like to use Maven or Gradle <span class="keyword">for</span> building the backend? Maven</span><br><span class="line">? Which other technologies would you like to use?</span><br><span class="line">? Which *Framework* would you like to use <span class="keyword">for</span> the client? Angular <span class="number">6</span></span><br><span class="line">? Would you like to enable *SASS* stylesheet preprocessor? No</span><br><span class="line">? Would you like to enable internationalization support? Yes</span><br><span class="line">? Please choose the native language of the application English</span><br><span class="line">? Please choose additional languages to install Japanese</span><br><span class="line">? Besides JUnit and Jest, which testing frameworks would you like to use? Protractor</span><br><span class="line">? Would you like to install other generators from the JHipster Marketplace? No</span><br><span class="line"></span><br><span class="line">・・・</span><br><span class="line"></span><br><span class="line">&gt; my-app@<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> cleanup C:\dev\JHipster\myApp</span><br><span class="line">&gt; rimraf target/&#123;aot,www&#125;</span><br><span class="line"></span><br><span class="line">Congratulations, JHipster execution is complete!</span><br><span class="line">Application successfully committed to Git.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br></p><h2 id="アプリの起動"><a href="#アプリの起動" class="headerlink" title="アプリの起動"></a>アプリの起動</h2><p>Maven wrapperを実行する</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\dev\JHipster\myApp&gt; .\mvnw</span><br><span class="line">・・・</span><br></pre></td></tr></table></figure><p>下記のURLを開いてページが表示されればOK<br><a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p><p><img src="http://drive.google.com/uc?export=view&amp;id=1-N2zdXbJsqIDW2rPBSIqlkQgqnSiItbk" alt=""></p><p>右上のlanguageから日本語を選択すると日本語化される。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1w37Mq0Gskx4wBzTHNS--__Fa0O73_7_z" alt=""></p><p>adminでログインして、メトリクス等が正常に動作していくか確認<br><img src="http://drive.google.com/uc?export=view&amp;id=1JirB-pVZ5PyNuekl6bR6PqjtJq2dqHCJ" alt=""></p><p>ユーザ管理からユーザの登録もできるが、<br>指定したメールアドレスは実際に送信処理が行われるので注意すること。</p><p><br></p><h2 id="エンティティの作成"><a href="#エンティティの作成" class="headerlink" title="エンティティの作成"></a>エンティティの作成</h2><p><a href="https://www.jhipster.tech/jdl/" target="_blank" rel="noopener">https://www.jhipster.tech/jdl/</a></p><p>やり方は色々とあるようだが、ここではJDL-Studioを用いてエンティティを作成する</p><p><a href="https://start.jhipster.tech/jdl-studio/" target="_blank" rel="noopener">https://start.jhipster.tech/jdl-studio/</a></p><p>開くと、簡単なサンプルブログのエンティティ構造のが示されている。<br>とりあえず、このエンティティをmyAppに取り込む。</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1V5vUUCBABPROhS7EyJZqAnBAh4_MXV_G" alt=""><br>右上の↓矢印でjdlファイルのダウンロードを行う。</p><p>ダウンロードしたファイルを、適当なフォルダに移動する。<br>ここではmyAppの下にjdlフォルダを作成して、sample-blog-jdl.jhに名前を変更して配置する。</p><p>jdlファイルをアプリに取り込む<br>コードを上書きする際にどのようにマージするか質問※されるので、aのoverwrite this and all othersを選択する。<br>※Overwrite src\main\resources\config\liquibase\master.xml?</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\dev\JHipster\myApp&gt; jhipster import-jdl .\jdl\sample-blog-jdl.jh</span><br><span class="line">・・・</span><br></pre></td></tr></table></figure><p>メニューのエンティティに項目が追加され、CRUD操作を行うことが出来るようになる。<br><img src="http://drive.google.com/uc?export=view&amp;id=1y7izhPf78XkjqbV5nshBJVBoPcT8MRn9" alt=""></p><p><img src="http://drive.google.com/uc?export=view&amp;id=1F_rpJm_Xefw8K-a0am3iPgZiK6CjM63_" alt=""></p><p><br></p><h2 id="Intellij-IDEAによる開発"><a href="#Intellij-IDEAによる開発" class="headerlink" title="Intellij IDEAによる開発"></a>Intellij IDEAによる開発</h2><p>１．プロジェクトのインポート<br><img src="http://drive.google.com/uc?export=view&amp;id=1sf31u5ldVoRXoxKZdQnH53yJEflh_34A" alt=""></p><p>２．myAppにあるpom.xmlを選択する<br><img src="http://drive.google.com/uc?export=view&amp;id=1U23nkha8fshxZfc1vBQTI3pkUO_wcGTH" alt=""></p><p>３．そのまま「次へ」を選び続け完了する。</p><p>４．jp.co.myapp.MyAppを実行すればアプリケーションが起動する<br><img src="http://drive.google.com/uc?export=view&amp;id=15f5WHA5ritMd0MEW3KMIU5gFMxI8_oNR" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="JHipster" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/JHipster/"/>
    
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="Java" scheme="https://s-ichimaru.github.io/hexo-site/tags/Java/"/>
    
      <category term="JHipster" scheme="https://s-ichimaru.github.io/hexo-site/tags/JHipster/"/>
    
  </entry>
  
  <entry>
    <title>AWS入門：④Amazon FC2(Amazon Linux)</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/17/aws-20180917-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/17/aws-20180917-1/</id>
    <published>2018-09-17T13:03:50.000Z</published>
    <updated>2018-10-02T13:01:49.614Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="Amazon-FC2とは"><a href="#Amazon-FC2とは" class="headerlink" title="Amazon FC2とは"></a>Amazon FC2とは</h2><p><a href="https://aws.amazon.com/jp/ec2/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ec2/</a></p><p>仮想のコンピューティング環境<br>・いわゆる「サーバ」を利用できるサービス<br>・OSより上のレイヤについては自由に設定可能<br>・従量課金制</p><p>EC2を使う上での5大ポイント<br>・OS/Imageの選択<br>・インスタンスタイプの選択<br>・ストレージの選択<br>・セキュリティグループの設定<br>・SSHキーペアの設定</p><p>インスタンスタイプ<br>・マイクロインスタンス：t1.～<br>・汎用：t2.～<br>・コンピューティングの最適化：c5d.～<br>・GPU Graphics：g3.～<br>・GPU インスタンス：g2.～<br>・GPU コンピューティング：p2.～<br>・メモリ最適化：r4.～<br>・ストレージの最適化：d2.～</p><p><br></p><h2 id="インスタンス作成とSSH接続"><a href="#インスタンス作成とSSH接続" class="headerlink" title="インスタンス作成とSSH接続"></a>インスタンス作成とSSH接続</h2><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSnGSSmOs8GbEqw43kRjWWpBlFwYOoEuxlW0pL5jYXjcPcu5hCqnFneqxUQrF_sYFSTszgqfLvz0IkW/embed?start=false&loop=false&delayms=3000" frameborder="0" width="690" height="410" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><p>※Step3のシェルコピー用<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ホスト名</span></span><br><span class="line">sed -i <span class="string">'s/^HOSTNAME=[a-zA-Z0-9\.\-]*$/HOSTNAME=sample-ec2-tomcat/g'</span> /etc/sysconfig/network</span><br><span class="line">hostname <span class="string">'sample-ec2-tomcat'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># タイムゾーン</span></span><br><span class="line">cp /usr/share/zoneinfo/Japan /etc/localtime</span><br><span class="line">sed -i <span class="string">'s|^ZONE=[a-zA-Z0-9\.\-\"]*$|ZONE="Asia/Tokyo”|g'</span> /etc/sysconfig/clock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 言語設定</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"LANG=ja_JP.UTF-8"</span> &gt; /etc/sysconfig/i18n</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="Tomcatインストール"><a href="#Tomcatインストール" class="headerlink" title="Tomcatインストール"></a>Tomcatインストール</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#javaインストール確認</span></span><br><span class="line">$ java -version</span><br><span class="line"></span><br><span class="line"><span class="comment">#Tomcatが既にインストールされていないか確認</span></span><br><span class="line">yum list installed | grep tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment">#Tomcatがyumにあるか確認</span></span><br><span class="line">$ yum search tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat8 インストール</span></span><br><span class="line">sudo yum install tomcat8</span><br><span class="line"></span><br><span class="line"><span class="comment">#Tomcat8のインストール確認</span></span><br><span class="line">yum list installed | grep tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat8 インストール先の確認</span></span><br><span class="line">rpm -ql tomcat8</span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat8 起動確認</span></span><br><span class="line">sudo service tomcat8 status</span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat8 起動</span></span><br><span class="line">sudo service tomcat8 start</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br></p><h2 id="struts-blank-warのデプロイ"><a href="#struts-blank-warのデプロイ" class="headerlink" title="struts-blank.warのデプロイ"></a>struts-blank.warのデプロイ</h2><p>適当なwarファイル（ここではstruts-blank）をデプロイする<br><br><br>TeraTermのSCPを用いてwarを転送<br><img src="http://drive.google.com/uc?export=view&amp;id=14gtztc-XHHeuW5jzIVtuB5NvnkzPbuEe" alt=""></p><p>デプロイ<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#warを/usr/share/tomcat8/webappsにコピーする</span></span><br><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ sudo cp struts-blank-1.3.10.war /usr/share/tomcat8/webapps/sample.war</span><br><span class="line"></span><br><span class="line"><span class="comment">#ログを確認する</span></span><br><span class="line">$ sudo bash -c <span class="string">"cd /usr/share/tomcat8/logs/;ls"</span></span><br><span class="line">$ sudo more /usr/share/tomcat8/logs/catalina.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># [localhost-startStop-1] org.apache.catalina.startu</span></span><br><span class="line"><span class="comment"># p.HostConfig.deployWAR Webアプリケーションアーカイブ [/var/lib/tomcat8/webapps/s</span></span><br><span class="line"><span class="comment"># ample.war] を配備します   が出てればOK</span></span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="動作確認"><a href="#動作確認" class="headerlink" title="動作確認"></a>動作確認</h2><p>http://(パブリックIP):8080/sample/</p><p><img src="http://drive.google.com/uc?export=view&amp;id=1LgOnYQZljqmLzbPf9BwrLR7LSmKOc3uO" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/AWS/"/>
    
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>AWS入門：③アカウント登録</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/16/aws-20180916-2/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/16/aws-20180916-2/</id>
    <published>2018-09-16T11:16:26.000Z</published>
    <updated>2018-10-02T13:01:33.643Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="AWSアカウントについて"><a href="#AWSアカウントについて" class="headerlink" title="AWSアカウントについて"></a>AWSアカウントについて</h2><p>AWSリソースの論理的な集合体<br>・サービスごと or 環境ごと（本番、検品）で分けるのが一般的<br>・この単位で利用料の請求がくる</p><p>AWSアカウントを作るのに必要なもの<br>・クレジットカード<br>・電話番号</p><p><br></p><h2 id="ルートユーザとIAMユーザ"><a href="#ルートユーザとIAMユーザ" class="headerlink" title="ルートユーザとIAMユーザ"></a>ルートユーザとIAMユーザ</h2><p>ルートユーザ<br>・全てのAWSサービスを利用できる特権ユーザ<br>・アカウントの設定変更、サポートプランはルートユーザのみ<br>・通常の作業にルートユーザは用いてはならない</p><p>IAMユーザ<br>・割り当てられたIAMポリシーで許可されたAWSサービスを利用できる<br>・利用者ごとに払い出し、通常の作業はこのユーザで行う</p><p><br></p><h2 id="アカウント登録"><a href="#アカウント登録" class="headerlink" title="アカウント登録"></a>アカウント登録</h2><p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSJZPLPSYdWHJLLFYeVOhqPyoZZaLQAwJwzxERiaMcPclCPhuNiM7-JVT1QignGmggo3BeAPojnvl3p/embed?start=false&loop=false&delayms=3000" frameborder="0" width="690" height="410" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><br>まずはアカウント登録を行う。</p><p><br></p><h2 id="IAMユーザ登録"><a href="#IAMユーザ登録" class="headerlink" title="IAMユーザ登録"></a>IAMユーザ登録</h2><p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vQVb9xT8QBgvtcN35TMRpzK7ezpUbSkeAsP9qSyR82GJV7FQTbLCboOla01rr0AvqXlQsRiZ_sKGVaj/embed?start=false&loop=false&delayms=3000" frameborder="0" width="690" height="410" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><br>rootの代わりとなる管理者ユーザを作成する。</p><p><br></p><h2 id="CloudTrail（操作ログ）の設定"><a href="#CloudTrail（操作ログ）の設定" class="headerlink" title="CloudTrail（操作ログ）の設定"></a>CloudTrail（操作ログ）の設定</h2><p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vRxa8RCd6LDU2JS6e16KlBJX09s_T-mzOBAhI8FBuis2pK_nFzLZYXfrOgHzRsblOuOlS9r7nI2xzkd/embed?start=false&loop=false&delayms=3000" frameborder="0" width="690" height="410" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><br>デフォルトログは90日間しか保存されないので永続化の設定を行う。<br>ただし、追加料金がかかる可能性があるので注意すること。<br>個人で利用する際は不要と思われる。</p><p><br></p><h2 id="CloudWatch（請求アラート）の設定"><a href="#CloudWatch（請求アラート）の設定" class="headerlink" title="CloudWatch（請求アラート）の設定"></a>CloudWatch（請求アラート）の設定</h2><p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSU8QyHgJ1--biRsDZ94zuG7ZOU5sqnY--k5ZYx7QcFAzvSA7y2gqeTw2HOHfrFUd4pGDfd7Mb3bY8a/embed?start=false&loop=false&delayms=3000" frameborder="0" width="690" height="410" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><br>インスタンス停止し忘れで多額の請求が行われないようにアラートの設定を行う。</p><!--===========================================================   参考資料=========================================================== --><p><hr></p><h2 id="参考資料"><a href="#参考資料" class="headerlink" title="参考資料"></a>参考資料</h2><p>Amazon Web Service<br><a href="https://aws.amazon.com/jp/" target="_blank" rel="noopener">https://aws.amazon.com/jp/</a></p><p>手を動かしながら2週間で学ぶ AWS 基本から応用まで<br><a href="https://www.udemy.com/aws-14days/" target="_blank" rel="noopener">https://www.udemy.com/aws-14days/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/AWS/"/>
    
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>AWS入門：②料金見積</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/16/aws-20180916-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/16/aws-20180916-1/</id>
    <published>2018-09-15T17:20:38.000Z</published>
    <updated>2018-10-02T12:45:56.950Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><p style="color:red">※※※　知識不足のため、改訂の可能性は高いです　※※※</p><p><br></p><h2 id="利用料金の試算"><a href="#利用料金の試算" class="headerlink" title="利用料金の試算"></a>利用料金の試算</h2><p><a href="https://aws.amazon.com/jp/how-to-understand-pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/how-to-understand-pricing/</a></p><p>利用料金について大きなズレがないか確認するために試算を行う。</p><p><br></p><h2 id="システム構成"><a href="#システム構成" class="headerlink" title="システム構成"></a>システム構成</h2><p>公式で提示されている構成例を参考に試算する。</p><p>Windows Server 社内業務アプリ環境移行のためのクラウド構成例<br><a href="https://aws.amazon.com/jp/cdp/windows-bizapp-migration/" target="_blank" rel="noopener">https://aws.amazon.com/jp/cdp/windows-bizapp-migration/</a></p><p><img src="https://d1.awsstatic.com/icons/jp/cdp/cdp-windows-bizapp-migration_v2.25a1a75c1eddb4eb02e813cd4c378dfd10bd723e.png" alt=""></p><p>予約金（年一回）：＄2,775.05<br>月額　　　　　　：＄371.42</p><p>上記の構成から本番機、検証機とインスタンスを分け、DBはSQL Server Express、<br>本番の使用率は１００％（365日/24時間稼働）、検証機は１０％、<br>データのダウンロードについては、月間10GBを想定とする。</p><table><thead><tr><th style="text-align:left">環境</th><th style="text-align:left">サービス</th><th style="text-align:left">設定</th><th style="text-align:left"></th><th style="text-align:left">使用率</th></tr></thead><tbody><tr><td style="text-align:left">本番</td><td style="text-align:left">EC2</td><td style="text-align:left">OS</td><td style="text-align:left">Windows Server</td><td style="text-align:left">100%</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">インスタンスタイプ</td><td style="text-align:left">r4.large</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">vCPU</td><td style="text-align:left">2コア</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">メモリ</td><td style="text-align:left">15.25G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">EBS</td><td style="text-align:left">タイプ</td><td style="text-align:left">Amazon EBS 汎用 SSD (gp2)</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">ストレージ</td><td style="text-align:left">160G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">RDS</td><td style="text-align:left">DB</td><td style="text-align:left">SQL Server Express</td><td style="text-align:left">100%</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">インスタンスタイプ</td><td style="text-align:left">db.t2.medium</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">vCPU</td><td style="text-align:left">2コア</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">メモリ</td><td style="text-align:left">4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">ストレージ</td><td style="text-align:left">80G（汎用SSD）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">検証</td><td style="text-align:left">EC2</td><td style="text-align:left">OS</td><td style="text-align:left">Windows Server</td><td style="text-align:left">10%</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">インスタンスタイプ</td><td style="text-align:left">r4.large</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">vCPU</td><td style="text-align:left">2コア</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">メモリ</td><td style="text-align:left">15.25G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">EBS</td><td style="text-align:left">タイプ</td><td style="text-align:left">Amazon EBS 汎用 SSD (gp2)</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">ストレージ</td><td style="text-align:left">160G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">RDS</td><td style="text-align:left">DB</td><td style="text-align:left">SQL Server Express</td><td style="text-align:left">10%</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">インスタンスタイプ</td><td style="text-align:left">db.t2.medium</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">vCPU</td><td style="text-align:left">2コア</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">メモリ</td><td style="text-align:left">4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left">ストレージ</td><td style="text-align:left">80G（汎用SSD）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">共通</td><td style="text-align:left">VPC</td><td style="text-align:left">VPN接続数</td><td style="text-align:left">１</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">S3</td><td style="text-align:left">ストレージ</td><td style="text-align:left">240G（本番バックアップ）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">サポート</td><td style="text-align:left">ビジネスプラン</td><td style="text-align:left"></td></tr></tbody></table><p><br></p><h2 id="見積り"><a href="#見積り" class="headerlink" title="見積り"></a>見積り</h2><p>簡易見積りツール<br><a href="http://calculator.s3.amazonaws.com/index.html?lng=ja_JP" target="_blank" rel="noopener">http://calculator.s3.amazonaws.com/index.html?lng=ja_JP</a></p><h3 id="EC2＆ESB"><a href="#EC2＆ESB" class="headerlink" title="EC2＆ESB"></a>EC2＆ESB</h3><p><img src="http://drive.google.com/uc?export=view&amp;id=166s9L0xtDjLbc3OhmRWMqdHBzZGnDfVa" alt=""><br><img src="http://drive.google.com/uc?export=view&amp;id=1THxIBaXR0eFyzUq42shz_LRC0XL3Xms5" alt=""></p><h3 id="S3"><a href="#S3" class="headerlink" title="S3"></a>S3</h3><p>アップロード（バックアップ）は無料のため設定なし<br><img src="http://drive.google.com/uc?export=view&amp;id=1pGby8vubkuj6jWAu2qEsud8TKpQ_KQ0l" alt=""></p><h3 id="RDS"><a href="#RDS" class="headerlink" title="RDS"></a>RDS</h3><p><img src="http://drive.google.com/uc?export=view&amp;id=1ix00JvmhRvyDVktCYhtVfe5i0LlnW-l_" alt=""></p><h3 id="VPC"><a href="#VPC" class="headerlink" title="VPC"></a>VPC</h3><p><img src="http://drive.google.com/uc?export=view&amp;id=12vFz7mRRWSTcZW84dVAePnkIj89pYG4M" alt=""></p><h3 id="サポート"><a href="#サポート" class="headerlink" title="サポート"></a>サポート</h3><p><img src="http://drive.google.com/uc?export=view&amp;id=1FeLchnMgGcTlTjNy_ry5wpuL7Wd7YdPR" alt=""></p><h3 id="見積り結果"><a href="#見積り結果" class="headerlink" title="見積り結果"></a>見積り結果</h3><p><img src="http://drive.google.com/uc?export=view&amp;id=158_sYq50dY-YFP-Xr9d2_xrB1kj8Wg2f" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/AWS/"/>
    
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>AWS入門：①AWS概要</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/15/aws-20180915-1/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/15/aws-20180915-1/</id>
    <published>2018-09-15T08:27:38.000Z</published>
    <updated>2018-10-02T12:45:49.397Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="AWSとは"><a href="#AWSとは" class="headerlink" title="AWSとは"></a>AWSとは</h2><blockquote><p>Amazon Web Services（アマゾン ウェブ サービス、AWS）とは、Amazon.comにより提供されているクラウドコンピューティングサービス（ウェブサービス）である。これらのサービスは全世界で18の地域に提供されている（2018年現在）。AWSの有名なサービスにAmazon Elastic Compute Cloud (EC2) とAmazon Simple Storage Service (S3) がある。これまでのクライアントが保有していた物理的なサーバファームと比較してAWSは大規模な計算処理能力を速やかに提供出来ることが強みである。</p><footer><strong>wikipedia,</strong><cite><a href="https://ja.wikipedia.org/wiki/Amazon_Web_Services" target="_blank" rel="noopener">ja.wikipedia.org/wiki/Amazon_Web_Services</a></cite></footer></blockquote><p><br></p><p><hr></p><h2 id="AWSサービス概要"><a href="#AWSサービス概要" class="headerlink" title="AWSサービス概要"></a>AWSサービス概要</h2><p><img src="http://drive.google.com/uc?export=view&amp;id=1vNskji1g-ZDjyBGm0JAQpsP4aNz_ailY" alt=""></p><p>少々古い情報だが見やすいので参考にさせてもらった。<br>参考：<a href="http://www.so-net.ne.jp/solution/service/idc/aws.html" target="_blank" rel="noopener">http://www.so-net.ne.jp/solution/service/idc/aws.html</a></p><p>非常にサービスが多いため、主要となるインフラ部分を重点的に整理することにする。<br><br></p><!--===========================================================   コンピューティング =========================================================== --><p><hr></p><h2 id="コンピューティング"><a href="#コンピューティング" class="headerlink" title="コンピューティング"></a>コンピューティング</h2><p><br></p><h3 id="Amazon-EC2：仮想サーバ"><a href="#Amazon-EC2：仮想サーバ" class="headerlink" title="Amazon EC2：仮想サーバ"></a>Amazon EC2：仮想サーバ</h3><p><a href="https://aws.amazon.com/jp/ec2/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ec2/</a></p><p>Amazon Elastic Compute Cloud (Amazon EC2) は、<br>安全でサイズ変更可能なコンピューティング性能をクラウド内で提供するウェブサービス。<br>アプリケーションのニーズに応じて自動的なスケールアップ、スケールダウンを数分以内に実現可能。</p><p><strong>料金体系</strong><br>・オンデマントインスタンス（従量課金制）<br>長期的な契約無しにコンピューティングの性能に対して料金を支払う。</p><p>・リザーブドインスタンス（1年または3年契約の前払い）<br>オンデマントインスタンスの料金に比べて大幅な割引（最大７５％）が受けれる。</p><p>・スポットインスタンス<br>入札式で余ったリソースを使うためオンデマンドよりも安い。<br>需要と供給により価格が変動するため、入札価格が変動価格を上回れば「強制的に削除」される。<br>大量のコンピューティング容量を必要としながら、緊急性は低い場合に便利なオプション。</p><p><strong>料金表</strong><br><a href="https://aws.amazon.com/jp/ec2/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ec2/pricing/</a></p><p><br></p><h3 id="Amazon-ECS：コンテナ管理サービス"><a href="#Amazon-ECS：コンテナ管理サービス" class="headerlink" title="Amazon ECS：コンテナ管理サービス"></a>Amazon ECS：コンテナ管理サービス</h3><p><a href="https://aws.amazon.com/jp/ecs/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ecs/</a></p><p>Amazon Elastic Container Service (Amazon ECS) は、<br>Docker コンテナをサポートするスケーラビリティに優れた高性能なコンテナ管理サービス。<br>コンテナ化されたアプリケーションをAWSで簡単に実行およびスケールが可能。</p><p><strong>料金体系</strong><br>・Fargate起動タイプモデル<br>コンテナ化されたアプリケーションに必要なvCPU（仮想CPU）とメモリリソースで金額がかかる</p><p>・FC2起動タイプ<br>追加料金は発生しない。<br>アプリケーションを保存、実行するために作成したAWSリソース（FC2インスタンス、<br>FBSボリュームなど）に対して料金が発生する。</p><p><strong>料金表</strong><br><a href="https://aws.amazon.com/jp/ecs/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ecs/pricing/</a></p><!--===========================================================   ストレージ=========================================================== --><p><hr></p><h2 id="ストレージ"><a href="#ストレージ" class="headerlink" title="ストレージ"></a>ストレージ</h2><p><br></p><h3 id="Amazon-S3：オンラインストレージサービス"><a href="#Amazon-S3：オンラインストレージサービス" class="headerlink" title="Amazon S3：オンラインストレージサービス"></a>Amazon S3：オンラインストレージサービス</h3><p><a href="https://aws.amazon.com/jp/s3/" target="_blank" rel="noopener">https://aws.amazon.com/jp/s3/</a></p><p>Amazon Simple Storage Service(Amazon S3) とは、<br>Amazon Web Services によって提供されるオンラインストレージのWebサービス。<br>Amazon S3は、Webサービスのインタフェースを介してストレージを提供している。<br>保存できるデータ容量、ファイル数に制約はないが、従量課金のため使った分だけ料金が発生する。</p><p><strong>料金表</strong><br><a href="https://aws.amazon.com/jp/s3/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/s3/pricing/</a></p><p><br></p><h3 id="Amazon-EBS：EC2インスタンスのストレージ"><a href="#Amazon-EBS：EC2インスタンスのストレージ" class="headerlink" title="Amazon EBS：EC2インスタンスのストレージ"></a>Amazon EBS：EC2インスタンスのストレージ</h3><p><a href="https://aws.amazon.com/jp/ebs/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ebs/</a></p><p>Amazon Elastic Block Store (Amazon EBS) は、AWS クラウドの Amazon EC2 インスタンス<br>で使用する永続的なブロックレベルのストレージボリュームを提供する。</p><p><strong>料金体系</strong><br>・Amazon EBS 汎用 SSD (gp2) ボリューム<br>・Amazon EBS プロビジョンド IOPS SSD (io1) ボリューム　<br>・Amazon EBS スループット最適化 HDD (st1) ボリューム<br>・Amazon EBS Cold HDD (sc1) ボリューム<br>　プロビジョニング（リソース割り当て）した容量 (GB/月) で決まり、<br>　そのストレージを解放するまで毎月料金が発生する。</p><p>・Amazon S3 に対する Amazon EBS スナップショット<br>　Amazon S3とのデータ転送による料金を支払う。</p><p><strong>料金表</strong><br><a href="https://aws.amazon.com/jp/ebs/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/ebs/pricing/</a></p><p><br></p><h3 id="Amazon-EFS：ファイルストレージ"><a href="#Amazon-EFS：ファイルストレージ" class="headerlink" title="Amazon EFS：ファイルストレージ"></a>Amazon EFS：ファイルストレージ</h3><p><a href="https://aws.amazon.com/jp/efs/" target="_blank" rel="noopener">https://aws.amazon.com/jp/efs/</a></p><p>Amazon Elastic File System（Amazon EFS）とは、AWS上で使用できる共有ファイルストレージ。<br>AWS上で複数のEC2インスタンスから共有ファイルストレージを使用したい場合に利用する。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/efs/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/efs/pricing/</a></p><p><br></p><h3 id="Amazon-Glacier：低コストファイルストレージ"><a href="#Amazon-Glacier：低コストファイルストレージ" class="headerlink" title="Amazon Glacier：低コストファイルストレージ"></a>Amazon Glacier：低コストファイルストレージ</h3><p>頻繁に使用されないデータ（コールドデータ）に最適化された低コスト、高耐久性を備えたストレージサービスで、データのアーカイブや長期バックアップに使用できる。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/glacier/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/glacier/pricing/</a></p><!--===========================================================   データベース=========================================================== --><p><hr></p><h2 id="データベース"><a href="#データベース" class="headerlink" title="データベース"></a>データベース</h2><p><br></p><h3 id="Amazon-RDS：リレーショナルデータベースサービス"><a href="#Amazon-RDS：リレーショナルデータベースサービス" class="headerlink" title="Amazon RDS：リレーショナルデータベースサービス"></a>Amazon RDS：リレーショナルデータベースサービス</h3><p><a href="https://aws.amazon.com/jp/rds/" target="_blank" rel="noopener">https://aws.amazon.com/jp/rds/</a></p><p>Amazon Relational Database Service (Amazon RDS) を使用すると、<br>クラウド内のリレーショナルデータベースのセットアップ、運用、スケールを行うことが可能。<br>データベースの種類と利用時間で料金を支払う。<br>Amazon Aurora、PostgreSQL、MySQL、MariaDB、Oracle、Microsoft SQL Server の<br>6 つの使い慣れたデータベースエンジンから選択可能。<br>Amazon Auroraとは、MySQL および PostgreSQL と互換性のあるリレーショナルデータベースエンジン。</p><p><strong><em>DBインスタンスクラス</em></strong><br><a href="https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html</a></p><p><strong><em>料金体系</em></strong><br>オンデマンドインスタンス or リザーブドインスタンス</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/rds/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/rds/pricing/</a></p><p><br></p><h3 id="Amazon-DynamoDB：NoSQLデータベースサービス"><a href="#Amazon-DynamoDB：NoSQLデータベースサービス" class="headerlink" title="Amazon DynamoDB：NoSQLデータベースサービス"></a>Amazon DynamoDB：NoSQLデータベースサービス</h3><p><a href="https://aws.amazon.com/jp/dynamodb/" target="_blank" rel="noopener">https://aws.amazon.com/jp/dynamodb/</a></p><p>NoSQL（Key-Valueストア）によるデータベースサービス。<br>RDBMSに比べて大量のデータを扱うことができる。<br>（ビックデータの解析、情報のリアルタイム処理など）</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/dynamodb/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/dynamodb/pricing/</a></p><p><br></p><h3 id="Amazon-ElastiCache：インメモリデータベースサービス"><a href="#Amazon-ElastiCache：インメモリデータベースサービス" class="headerlink" title="Amazon ElastiCache：インメモリデータベースサービス"></a>Amazon ElastiCache：インメモリデータベースサービス</h3><p><a href="https://aws.amazon.com/jp/elasticache/" target="_blank" rel="noopener">https://aws.amazon.com/jp/elasticache/</a></p><p>フルマネージドな分散インメモリデータベースストらサービス<br>キャッシュエンジンとしてmemcachedとRedisがサポートされている。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/elasticache/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/elasticache/pricing/</a></p><!--===========================================================   ネットワーク＆ルーティング=========================================================== --><p><hr></p><h2 id="ネットワーク＆ルーティング"><a href="#ネットワーク＆ルーティング" class="headerlink" title="ネットワーク＆ルーティング"></a>ネットワーク＆ルーティング</h2><p><br></p><h3 id="Amazon-VPC：仮想プライベートクラウド"><a href="#Amazon-VPC：仮想プライベートクラウド" class="headerlink" title="Amazon VPC：仮想プライベートクラウド"></a>Amazon VPC：仮想プライベートクラウド</h3><p><a href="https://aws.amazon.com/jp/vpc/" target="_blank" rel="noopener">https://aws.amazon.com/jp/vpc/</a></p><p>Amazon Virtual Private Cloud (Amazon VPC) により<br>AWSリソースをユーザー定義の仮想ネットワークで起動できる。<br>独自のIPアドレス範囲の選択、サブネットの作成、ルートテーブル、<br>ネットワークゲートウェイの設定など、仮想ネットワーク環境を完全にコントロール可能。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/vpc/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/vpc/pricing/</a></p><p><br></p><h3 id="Amazon-ELB：ロードバランサ"><a href="#Amazon-ELB：ロードバランサ" class="headerlink" title="Amazon ELB：ロードバランサ"></a>Amazon ELB：ロードバランサ</h3><p><a href="https://aws.amazon.com/jp/elasticloadbalancing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/elasticloadbalancing/</a></p><p>Amazon Elastic Load Balancing（Amazon ELB） は、アプリケーションへのトラフィックを<br>複数のターゲット (Amazon EC2 インスタンス、コンテナ、IP アドレスなど) に自動的に分散する。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/elasticloadbalancing/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/elasticloadbalancing/pricing/</a></p><p><br></p><h3 id="Amazon-Route-53：クラウドDNSサーバ"><a href="#Amazon-Route-53：クラウドDNSサーバ" class="headerlink" title="Amazon Route 53：クラウドDNSサーバ"></a>Amazon Route 53：クラウドDNSサーバ</h3><p><a href="https://aws.amazon.com/jp/route53/" target="_blank" rel="noopener">https://aws.amazon.com/jp/route53/</a></p><p>Amazon Route 53 は、可用性と拡張性に優れたドメインネームシステム (DNS) ウェブサービス。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/route53/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/route53/pricing/</a></p><p><br></p><h3 id="AWS-Direct-Connect：専用線接続サービス"><a href="#AWS-Direct-Connect：専用線接続サービス" class="headerlink" title="AWS Direct Connect：専用線接続サービス"></a>AWS Direct Connect：専用線接続サービス</h3><p><a href="https://aws.amazon.com/jp/directconnect/" target="_blank" rel="noopener">https://aws.amazon.com/jp/directconnect/</a></p><p>AWS Direct Connect を使用するとAWS とデータセンター、オフィス、<br>またはコロケーション環境間にプライベート接続を確立することができる。</p><p><strong><em>料金表</em></strong><br><a href="https://aws.amazon.com/jp/directconnect/pricing/" target="_blank" rel="noopener">https://aws.amazon.com/jp/directconnect/pricing/</a></p><p><br><br><br><br><br><br><br></p><!--===========================================================   参考資料=========================================================== --><p><hr></p><h2 id="参考資料"><a href="#参考資料" class="headerlink" title="参考資料"></a>参考資料</h2><p>Amazon Web Service<br><a href="https://aws.amazon.com/jp/" target="_blank" rel="noopener">https://aws.amazon.com/jp/</a></p><p>アマゾンウェブサービスの概要<br><a href="https://d1.awsstatic.com/International/ja_JP/Whitepapers/aws-overview.pdf" target="_blank" rel="noopener">https://d1.awsstatic.com/International/ja_JP/Whitepapers/aws-overview.pdf</a></p><p>[初心者向け]AWSで開発環境を構築しよう<br><a href="https://www.slideshare.net/AmazonWebServicesJapan/webinar-aws" target="_blank" rel="noopener">https://www.slideshare.net/AmazonWebServicesJapan/webinar-aws</a></p><p>【2018年】AWS全サービスまとめ その1（コンピューティング、ストレージ、データベース、移行、ネットワーキング ＆ コンテンツ配信）<br><a href="https://dev.classmethod.jp/cloud/aws/aws-summary-2018-1/" target="_blank" rel="noopener">https://dev.classmethod.jp/cloud/aws/aws-summary-2018-1/</a></p><p>So-netソリューションサービス<br><a href="http://www.so-net.ne.jp/solution/service/idc/aws.html" target="_blank" rel="noopener">http://www.so-net.ne.jp/solution/service/idc/aws.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/AWS/"/>
    
    
      <category term="クラウド" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89/"/>
    
      <category term="AWS" scheme="https://s-ichimaru.github.io/hexo-site/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEAを試してみる</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/</id>
    <published>2018-09-12T12:00:00.000Z</published>
    <updated>2018-10-02T12:43:41.135Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="IntelliJ-IDEAとは"><a href="#IntelliJ-IDEAとは" class="headerlink" title="IntelliJ IDEAとは"></a>IntelliJ IDEAとは</h2><blockquote><p>Javaなど数多くのプログラミング言語に対応した統合開発環境。<br>リファクタリング機能をJava用の統合開発環境としては初めて搭載したことでも知られる。<br>変数に型のないプログラミング言語に対してもリファクタリングを提供している。<br>ZeroTurnaroundの調査によると、Javaの統合開発環境としてはEclipseに続いて2番目に人気である (2011年はシェア22%[3]、2012年はシェア28%[4])。</p><footer><strong>wikipedia,</strong><cite><a href="https://ja.wikipedia.org/wiki/IntelliJ_IDEA" target="_blank" rel="noopener">ja.wikipedia.org/wiki/IntelliJ_IDEA</a></cite></footer></blockquote><p>2位とあるが、既にEclipseは抜かれていたりする。<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_17h23_26.jpg"></p><p>（参考：<a href="https://zeroturnaround.com）" target="_blank" rel="noopener">https://zeroturnaround.com）</a></p><p><br></p><h2 id="インストールとセットアップの公式ドキュメント"><a href="#インストールとセットアップの公式ドキュメント" class="headerlink" title="インストールとセットアップの公式ドキュメント"></a>インストールとセットアップの公式ドキュメント</h2><p><a href="https://pleiades.io/help/idea/install-and-set-up-product.html" target="_blank" rel="noopener">https://pleiades.io/help/idea/install-and-set-up-product.html</a></p><p>URLにPleiades？<br>IntelliJでも日本語化にはPleiadesを利用するらしい。</p><p><br></p><h2 id="インストール"><a href="#インストール" class="headerlink" title="インストール"></a>インストール</h2><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></p><p>トップページにあるDownloadをクリック　→　Community(無償版)をダウンロード。<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_16h55_58.jpg"></p><p>インストーラーを実行して、基本はデフォルトのまま進めていく。<br>以下の画面ではチェックを付けている（結構適当・・・）<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_17h05_59.jpg"></p><p><br></p><h2 id="日本語化対応"><a href="#日本語化対応" class="headerlink" title="日本語化対応"></a>日本語化対応</h2><p><a href="https://pleiades.io/pages/pleiades_jetbrains_manual.html" target="_blank" rel="noopener">https://pleiades.io/pages/pleiades_jetbrains_manual.html</a></p><p>さすがに英語はきついので、日本語化にする。</p><p>・Pleiades インストーラーで日本語化<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h18_33.jpg"><br>Windowsを選んでダウンロード後、解凍する。<br>setup.exeを実行すると以下の画面が出てくるので<br>「C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.2.3\bin\idea64.exe」<br>を選択する。※インストール場所がデフォルトの場合<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h29_58.jpg"><br>これで完了</p><p><br></p><h2 id="起動と簡易プロジェクトの作成"><a href="#起動と簡易プロジェクトの作成" class="headerlink" title="起動と簡易プロジェクトの作成"></a>起動と簡易プロジェクトの作成</h2><p>利用規約とデータ共有の確認を行う。<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h37_29.jpg"><br><br><br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h41_20.jpg"><br>「新規プロジェクトの作成」を選択<br><br><br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h45_51.jpg"><br>JDKがないみたいなので、インストール済みをjava8を選択する。<br>その後「Javaモジュール」選択のまま次へ。<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h50_46.jpg"><br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_19h51_44.jpg"></p><p><br></p><h2 id="HelloWorldで実行確認"><a href="#HelloWorldで実行確認" class="headerlink" title="HelloWorldで実行確認"></a>HelloWorldで実行確認</h2><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_20h12_09.jpg"><p><br></p><h2 id="コード保管"><a href="#コード保管" class="headerlink" title="コード保管"></a>コード保管</h2><p>とりあえずコード保管をチェック。</p><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_20h29_09.jpg"><p>「S」と入力した瞬間にコード保管が表示される。<br>※elipseだと、入力後「Ctrl+Space」が必要。</p><p>とにかく一瞬でビューが表示されるので、<br>「private static void」を入力する場合、<br>pr[EnterKey] st[EnterKey] v[EnterKey]で入力を終えることができる。</p><p>あと、setValueメソッドを作って保管する場合、<br>IntelliJだと<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_21h15_12.jpg"><br>Eclipseだと<br><img src="/hexo-site/2018/09/12/IntelliJ-IDEA-20180912/2018-09-12_21h17_04.jpg"><br>となる。<br>なお、IntelliJでもvを大文字にするとEclipseと同じ保管内容になる。<br>なかなか賢いなと感じた。</p><h2 id="総評"><a href="#総評" class="headerlink" title="総評"></a>総評</h2><p>まだ触ったばかりなので、なんとも言えないが<br>Eclipseよりも軽くストレスを感じにくかった。<br>EclipseとIntelliJ両方を使えるようになっておきたい。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="Java" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/Java/"/>
    
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="Java" scheme="https://s-ichimaru.github.io/hexo-site/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Dojo Toolkit入門</title>
    <link href="https://s-ichimaru.github.io/hexo-site/2018/09/09/dojo-tutorial/"/>
    <id>https://s-ichimaru.github.io/hexo-site/2018/09/09/dojo-tutorial/</id>
    <published>2018-09-09T11:19:05.000Z</published>
    <updated>2018-10-02T12:46:52.844Z</updated>
    
    <content type="html"><![CDATA[<p>　<br><a id="more"></a></p><h2 id="Dojoとは"><a href="#Dojoとは" class="headerlink" title="Dojoとは"></a>Dojoとは</h2><p>オープンソースのJavaScriptライブラリーの1つで、<br>クロスブラウザに対応したJavaScript/Ajaxアプリケーションを迅速に開発するために設計されている。</p><h2 id="Dojoコンポーネント"><a href="#Dojoコンポーネント" class="headerlink" title="Dojoコンポーネント"></a>Dojoコンポーネント</h2><p>Dojo（Base）<br>　コアパッケージ<br>  ・DOMの検索と操作<br>  ・DOMのイベントハンドリング<br>  ・エフェクトとアニメーション<br>  ・Ajaxとサーバー連携<br>  ・ドラッグ・アンド・ドロップ<br>  ・I/O<br>  ・データ管理<br>  ・国際化対応 (i8n)<br>  ・ブラウザーの履歴管理</p><p>Dijit<br>　Dojo上に構成されたUIライブラリ<br>　・Webアプリケーションの迅速な開発を支援するウィジェットのコレクション<br>　・再利用可能なコンポーネントは、わずかのHTML、JavaScript、CSSで作成できる<br>　・アプリケーション全体で一貫性のあるUXを提供し、カスタマイズ可能<br>　・メジャーブラウザーサポート</p><p>Dojox<br>　サブプロジェクトを集めたライブラリ<br>　実験用機能が含まれるため、あまり実用性はない（中には安定している機能はあるらしい）<br>　<br>Util<br>　サポートツール　<br>　・コードのビルド<br>　・テスト<br>　・文書化<br>　など<br>　<br>AMD（Asynchronous Module Definition)<br>　モジュールローダー<br>　dojoではすべての機能を読み込むのではなく、必要に応じて利用するための仕組み　</p><h2 id="Dojo-Base-チュートリアル"><a href="#Dojo-Base-チュートリアル" class="headerlink" title="Dojo Base チュートリアル"></a>Dojo Base チュートリアル</h2><p>サンプルコードはGitHubを参照<br><a href="https://github.com/s-ichimaru/tutorial/tree/master/dojo" title="dojo-tutorial" target="_blank" rel="noopener">dojo-tutorial</a></p><p>1.Dojoスクリプトの読み込みとonload<br>  ・ 1_1_ready.html</p><p>2.CSSセレクタの利用方法<br>  ・ 1_2_domquery.html</p><p>3.AMDの利用<br>  ・ 1_3_amd.html</p><p>4.イベント処理（ONイベント)<br>  ・ 1_4_on.html</p><p>5.マウスイベント処理（mouseイベント)<br>  ・ 1_5_mouse.html</p><p>6.DOMスタイル操作<br>  ・ 1_6_domstyle.html</p><p>7.DOMクラス操作<br>  ・ 1_7_domclass.html</p><p>8.DOM構築<br>  ・ 1_8_domconstruct.html</p><p>9.イベントハンドラ<br>  ・ 1_9_eventhandle.html</p><p>10.イベント委譲<br>  ・ 1_10_event_delegations.html</p><h2 id="Dijit-チュートリアル"><a href="#Dijit-チュートリアル" class="headerlink" title="Dijit チュートリアル"></a>Dijit チュートリアル</h2><p>1.Dijit Button(dom parser)<br>  ・ 2_1_dijit_button1.html</p><p>2.Dijit Button(dynamic create)<br>  ・ 2_2_dijit_button2.html</p><p>3.Dijit Buttons(Component Types)<br>  ・ 2_3_dijit_button3.html</p><p>4.Dijit TextBoxs(Component Types)<br>  ・ 2_4_dijit_textbox1.html</p><p>5.Dijit TextBoxs(dijit/registry)<br>  ・ 2_5_dijit_textbox2.html</p><p>6.Dijit Select or Combo(Component Types)<br>  ・ 2_6_dijit_select.html</p><h2 id="その他調査"><a href="#その他調査" class="headerlink" title="その他調査"></a>その他調査</h2><p>1.関数オーバーライド<br>  ex1_override.html</p><p>2.closet<br>  ex2_closest.html</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　&lt;br&gt;
    
    </summary>
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="Dojo Toolkit" scheme="https://s-ichimaru.github.io/hexo-site/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/Dojo-Toolkit/"/>
    
    
      <category term="アプリケーション" scheme="https://s-ichimaru.github.io/hexo-site/tags/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
      <category term="Dojo Toolkit" scheme="https://s-ichimaru.github.io/hexo-site/tags/Dojo-Toolkit/"/>
    
  </entry>
  
</feed>
